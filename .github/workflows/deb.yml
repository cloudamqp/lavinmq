name: Debian packages
on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
    paths-ignore:
      - 'spec/**'

jobs:
  build_docs:
    name: Build HTTP API documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate and build the documentation
        run: ./build/build_docs_in_ci

      - name: Upload the documentation
        uses: actions/upload-artifact@v2
        with:
          name: index.html
          path: static/docs/index.html

  build_deb:
    name: Build
    needs: build_docs
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download the HTTP API documentation
        uses: actions/download-artifact@v2
        with:
          name: index.html
          path: static/docs/

      - name: Get version
        run: echo "PKG_VERSION=$(git describe --tags | cut -c2-)" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build deb package
        uses: docker/build-push-action@v2
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: Dockerfile.deb
          platforms: linux/${{ matrix.arch }}
          build-args: |
            build_image=84codes/crystal:1.3.0-${{ matrix.os }}
            pkg_version=${{ env.PKG_VERSION }}
          outputs: builds

      - name: Upload to Packagecloud
        run: |
          set -eux
          curl -fsSO -u "${{ secrets.packagecloud_token }}:" https://packagecloud.io/api/v1/distributions.json
          PKG_FILE=$(find builds -name "*.deb" | head -1)
          ID=$(echo $PKG_FILE | cut -d/ -f2)
          VERSION_CODENAME=$(echo $PKG_FILE | cut -d/ -f3)
          DIST_ID=$(jq ".deb[] | select(.index_name == \"${ID}\").versions[] | select(.index_name == \"${VERSION_CODENAME}\").id" distributions.json)
          curl -fsS -u "${{ secrets.packagecloud_token }}:" -XPOST \
            -F "package[distro_version_id]=${DIST_ID}" \
            -F "package[package_file]=@${PKG_FILE}" \
            https://packagecloud.io/api/v1/repos/${{ github.repository }}/packages.json
        if: startsWith(github.ref, 'refs/tags/v')

      - name: Upload to Packagecloud head repo
        run: |
          set -eux
          curl -fsSO -u "${{ secrets.packagecloud_token }}:" https://packagecloud.io/api/v1/distributions.json
          PKG_FILE=$(find builds -name "*.deb" | head -1)
          ID=$(echo $PKG_FILE | cut -d/ -f2)
          VERSION_CODENAME=$(echo $PKG_FILE | cut -d/ -f3)
          DIST_ID=$(jq ".deb[] | select(.index_name == \"${ID}\").versions[] | select(.index_name == \"${VERSION_CODENAME}\").id" distributions.json)
          curl -fsS -u "${{ secrets.packagecloud_token }}:" -XPOST \
            -F "package[distro_version_id]=${DIST_ID}" \
            -F "package[package_file]=@${PKG_FILE}" \
            https://packagecloud.io/api/v1/repos/${{ github.repository }}-head/packages.json
        if: github.ref == 'refs/heads/main'
