name: CI
on: [push]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Crystal Ameba Linter
        uses: crystal-ameba/github-action@v0.2.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  api-lint:
    name: Lint and build HTTP API documentation
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Lint and build HTTP API documentation
        run: ./build/build_docs_in_ci

  spec:
    name: Spec
    runs-on: ubuntu-latest
    container: 84codes/crystal:1.1.1-ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: apt-get update && apt-get install -y libsystemd-dev libyaml-dev

      - name: Shards install
        run: shards install --ignore-crystal-version

      - name: Spec
        run: crystal spec --no-color --order random

  compile:
    name: Compile AvalancheMQ
    runs-on: ubuntu-latest
    container: 84codes/crystal:1.1.1-ubuntu-20.04

    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y libsystemd-dev pkg-config tzdata libpcre3-dev libevent-dev libyaml-dev libgmp-dev libssl-dev libxml2-dev python-is-python3 python3

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build avalanchemq
        run: |
          shards install --production --ignore-crystal-version
          shards build --release --production avalanchemq avalanchemqctl

      - name: Upload bin/
        uses: actions/upload-artifact@v2
        with:
          name: bin
          path: bin/

  java-client-test:
    name: RabbitMQ java client test (allowed to fail)
    runs-on: ubuntu-latest
    needs: compile
    continue-on-error: true

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make libevent-dev openjdk-11-jre-headless

      - uses: actions/download-artifact@v2
        with:
          name: bin
          path: bin

      - name: Run avalanchemq in background
        run: |
          chmod +x bin/avalanchemq
          bin/avalanchemq --data-dir /tmp/amqp &

      - name: Clone java client
        uses: actions/checkout@v2
        with:
          repository: 84codes/rabbitmq-java-client
          path: rabbitmq-java-client

      - name: Run java tests (allowed to fail)
        id: test
        continue-on-error: true
        run: |
          cd rabbitmq-java-client
          make deps
          ./mvnw -q verify -P '!setup-test-cluster' -Dit.test=FunctionalTests

      - name: >-
          Test outcome: ${{ steps.test.outcome }}
        run: echo NOOP

  bunny-test:
    name: Bunny client test
    runs-on: ubuntu-20.04
    needs: compile

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libevent-dev

      - name: Checkout AvalancheMQ for bunny_definitions.json
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: bin
          path: bin

      - name: Run avalanchemq in background
        run: |
          chmod +x bin/avalanchemq
          bin/avalanchemq --data-dir /tmp/amqp &

      - name: Import definitions
        run: |
          chmod +x bin/avalanchemqctl
          bin/avalanchemqctl import_definitions .github/bunny_definitions.json

      - name: Clone Bunny
        uses: actions/checkout@v2
        with:
          repository: ruby-amqp/bunny
          path: bunny
          fetch-depth: 0
          ref: "2.17.0"

      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: bunny
          ruby-version: 2.7.2
          bundler-cache: true

      - name: Run specs
        run: |
          cd bunny
          bundle exec rspec \
            --pattern "spec/*/integration/*_spec.rb, spec/issues/*_spec.rb" \
            --exclude-pattern "**/*/tx_*, **/*/tls_*, **/*/connection_recovery_*"

  ruby-http-api-test:
    name: RabbitMQ HTTP API Ruby client test
    runs-on: ubuntu-20.04
    needs: compile
    continue-on-error: true

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: bin
          path: bin

      - name: Run avalanchemq in background
        run: |
          chmod +x bin/avalanchemq
          bin/avalanchemq --data-dir /tmp/amqp &

      - name: Clone HTTP API client
        uses: actions/checkout@v2
        with:
          repository: 84codes/rabbitmq_http_api_client
          token: ${{ secrets.PRIVATE_REPO_ACCESS }}
          path: rabbitmq_http_api_client

      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: rabbitmq_http_api_client
          ruby-version: 2.7.1
          bundler-cache: true

      - name: Run specs
        run: |
          cd rabbitmq_http_api_client
          bundle exec rspec

  go-http-api-test:
    name: RabbitMQ HTTP API Go client test
    runs-on: ubuntu-20.04
    needs: compile
    continue-on-error: true

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: bin
          path: bin

      - name: Run avalanchemq in background
        run: |
          chmod +x bin/avalanchemq
          bin/avalanchemq --data-dir /tmp/amqp &

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.2

      - name: Clone http client
        uses: actions/checkout@v2
        with:
          repository: 84codes/rabbit-hole
          token: ${{ secrets.PRIVATE_REPO_ACCESS }}
          path: rabbit-hole

      - name: Run specs
        run: |
          cd rabbit-hole
          go test -v ./...

  release-mode-test:
    name: Test in release mode
    runs-on: ubuntu-20.04
    needs: compile
    continue-on-error: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: bin
          path: bin

      - name: Run avalanchemq in background
        run: |
          chmod +x bin/avalanchemq
          bin/avalanchemq --data-dir /tmp/amqp &

      - name: Test the static HTTP controller
        run: ./extras/static_requests.sh
