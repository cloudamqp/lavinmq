name: RPM
on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build_docs:
    name: Build HTTP API documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate and build the documentation
        run: ./build/npm_ci

      - name: Upload the documentation
        uses: actions/upload-artifact@v2
        with:
          name: index.html
          path: static/docs/index.html

  build_rpm:
    name: Build RPM
    needs: build_docs
    strategy:
      fail-fast: false
      matrix:
        os: ['centos:8']
    runs-on: ubuntu-20.04
    container: ${{ matrix.os }}
    steps:
      - name: Install crystal
        run: |
          curl -fsSLO https://crystal-lang.org/install.sh
          chmod +x install.sh
          ./install.sh --version=1.0

      - name: Install dependencies
        run: |
          yum install dnf-plugins-core
          yum config-manager --set-enabled powertools
          yum install -y git rpmlint rpm-build openssl-devel zlib-devel help2man systemd-devel

      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - name: Download the HTTP API documentation
        uses: actions/download-artifact@v2
        with:
          name: index.html
          path: static/docs/

      - name: Build RPM package
        run: build/rpm

      - name: Upload packages
        uses: actions/upload-artifact@v2
        with:
          name: rpms
          path: builds/rpm

  upload_packages:
    name: Upload to Packagecloud
    needs: build_rpm
    runs-on: ubuntu-latest
    steps:
      - name: Download packages
        uses: actions/download-artifact@v2
        with:
          name: rpms

      - name: Display folder structure
        run: ls -R

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Install packagecloud cli
        run: gem install package_cloud

      - name: Upload to packagecloud head repo
        run: package_cloud push cloudamqp/avalanchemq-head/el/8 **/*.rpm
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
        if: github.ref == 'refs/heads/main'

      - name: Upload to packagecloud release repo
        run: package_cloud push cloudamqp/avalanchemq/el/8 **/*.rpm
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/v')
