ARG build_image
ARG target_image

# Build docs
FROM --platform=$BUILDPLATFORM node:lts AS docbuilder
WORKDIR /tmp
RUN npm install -g redoc-cli
COPY shard.yml .
COPY openapi openapi
RUN redoc-cli bundle openapi/openapi.yaml

# Build objects file on build platform for speed
FROM --platform=$BUILDPLATFORM $build_image AS builder
RUN apt-get update && apt-get install -y curl
WORKDIR /tmp
COPY Makefile shard.yml shard.lock .
RUN make js lib
COPY --from=docbuilder /tmp/openapi/openapi.yaml openapi/openapi.yaml
COPY --from=docbuilder /tmp/redoc-static.html static/docs/index.html
COPY ./static ./static
COPY ./src ./src
ARG pkg_version
RUN sed -i "s/VERSION = .*/VERSION = \"${pkg_version}\"/" src/lavinmq/version.cr
ARG TARGETARCH
RUN make objects target=$TARGETARCH-unknown-linux-gnu -j2

# Link and build deb package on target platform
FROM $build_image AS build-stage
WORKDIR /tmp
RUN apt-get update && \
    apt-get install -y make gcc libc-dev libpcre3-dev libevent-dev libssl-dev zlib1g-dev libgc-dev libsystemd-dev help2man
COPY README.md LICENSE NOTICE CHANGELOG.md build/deb Makefile .
COPY extras extras
COPY --from=builder /tmp/bin bin
RUN make all -j && rm bin/*.*
ARG pkg_version
RUN ./deb $pkg_version

# Copy the deb package to a scratch image, that then can be exported
FROM scratch AS export-stage
COPY --from=build-stage /tmp/builds .
